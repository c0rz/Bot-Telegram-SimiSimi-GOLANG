package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

func bot_simi(pesan string) string {
	url := "https://api.simsimi.net/v1/?lang=id&cf=%5BChatfuel%5D&text=" + strings.ReplaceAll(pesan, " ", "%20")
	method := "GET"
	payload := strings.NewReader("")

	client := &http.Client{}
	req, err := http.NewRequest(method, url, payload)
	if err != nil {
		log.Panic(err)
	}
	res, err := client.Do(req)
	if err != nil {
		log.Panic(err)
	}
	defer res.Body.Close()
	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		log.Panic(err)
	}
	return string(body)
}

func main() {

	type Messages []struct {
		Ask      string `json:"ask"`
		Response string `json:"response"`
		Result   int    `json:"result"`
	}
	type StrukSimi struct {
		Methods  string   `json:"methods"`
		Messages Messages `json:"messages"`
		Error    string   `json:"error"`
		Donate   string   `json:"donate"`
	}
	type Autogenerated struct {
		Methods  string `json:"methods"`
		Messages []struct {
			Ask      string `json:"ask"`
			Response string `json:"response"`
			Result   int    `json:"result"`
		} `json:"messages"`
		Error  string `json:"error"`
		Donate string `json:"donate"`
	}
	bot, err := tgbotapi.NewBotAPI("1718932648:AAHpVnUyqz1CACxHIOiN77Df_cvwbfQdrjc")
	if err != nil {
		log.Panic("Token belum terisi atau tidak valid.")
	}

	bot.Debug = true

	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates, err := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil { // ignore any non-Message Updates
			continue
		}

		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)
		if update.Message.Text == "/start" {
			pesan_pembuka := "Selamat datang, silahkan chat bersamaKu jika kamu sendiri ! \n❤️ by https://github.com/c0rz"
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, pesan_pembuka)
			msg.ReplyToMessageID = update.Message.MessageID
			bot.Send(msg)
		} else {
			fmt.Println(update.Message.Text)
			jawab_simi := bot_simi(update.Message.Text)
			var text_simi Autogenerated
			json.Unmarshal([]byte(jawab_simi), &text_simi)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, text_simi.Messages[0].Response)
			msg.ReplyToMessageID = update.Message.MessageID
			bot.Send(msg)
		}
	}
}
